#!/usr/bin/env python
# Copyright 2015-2018 The Wazo Authors  (see the AUTHORS file)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

from fabric.api import run
from fabric.decorators import hosts
from fabric.tasks import execute

XIVO_TEST_HOST = "root@xivo-test"
XIVO_TEST_SLAVE_HOST = "root@xivo-test-slave"
MIRROR_HOST = "root@mirror.wazo.community"


def freeze():
    execute(check_server_started)
    execute(check_slave_started)
    execute(backup_server)
    execute(synchronize_mirrors)
    execute(clear_confgen_cache)
    execute(upgrade_xivo_test)
    execute(upgrade_xivo_test_slave)

    print
    print "RC is ready !"
    print


@hosts(XIVO_TEST_HOST)
def check_server_started():
    run('ls')


@hosts(XIVO_TEST_SLAVE_HOST)
def check_slave_started():
    run('ls')


@hosts(XIVO_TEST_HOST)
def backup_server():
    run('wazo-service stop')
    run('xivo-backup data /var/backups/xivo/data')
    run('xivo-backup db /var/backups/xivo/db')
    run('wazo-service start')


@hosts(XIVO_TEST_HOST)
def clear_confgen_cache():
    run('rm -f /var/lib/xivo-confgend/asterisk/*')


@hosts(MIRROR_HOST)
def synchronize_mirrors():
    run('reprepro -vb /data/reprepro/xivo update wazo-rc-stretch')


@hosts(XIVO_TEST_HOST)
def upgrade_xivo_test():
    run('wazo-upgrade -f')


@hosts(XIVO_TEST_SLAVE_HOST)
def upgrade_xivo_test_slave():
    slave_cron_file = '/etc/cron.d/xivo-ha-slave'
    disable_cron_command = '[ -f {slave_cron_file} ] && mv {slave_cron_file} {slave_cron_file}.disabled'
    enable_cron_command = '[ -f {slave_cron_file}.disabled ] && mv {slave_cron_file}.disabled {slave_cron_file}'
    run(disable_cron_command.format(slave_cron_file=slave_cron_file), warn_only=True)
    run('wazo-upgrade -f')
    run(enable_cron_command.format(slave_cron_file=slave_cron_file), warn_only=True)


if __name__ == "__main__":
    freeze()
