#!/bin/bash
# Author: Nicolas Hicher <nhicher@proformatique.com (atarakt)>
# License: GNU General Public License (GPL) V3
# Copyright: (C) 2015 Avencall

usage() {
    cat << EOF 
You have to provide some informations to allow tagging:

    $(basename $0) -v xivo_version [-d git_root_directory]

    -v: xivo_version
    -d: git_root_directory (default ~/xivo_src)

    example : $(basename $0) -v 12.14

EOF
    exit
}

update_repository() {
    local directories=$*
    echo "Ensure we start from an up-to-date repository"
    for dir in $directories; do
        cd $dir
        echo "updating $dir"
        $git fetch -q origin || exit 1
        echo "done"
        cd "$OLDPWD"
    done
}

create_build_cmd() {
    local version=$1
    local cmd="$git tag -s xivo-$version -m xivo-$version origin/master"
    echo $cmd
}

create_tag() {
    for dir in $directories; do
        cd $dir
        lasttag=$(git tag | grep xivo-$version)
        if [ -z $lasttag ]; then
            cmd=$(create_build_cmd $version)
            $cmd || exit 1
            $git push --tags -q || exit 1
        else
            echo "$dir has already been tagged."
        fi
        cd "$OLDPWD"
    done
}

check_if_directories_exist() {
    local missed_dir=0
    for dir in $directories; do
        if [ ! -d $dir ]; then
            echo "directory $dir doesn't exist"
            missed_dir=1
        fi
    done
    if [ $missed_dir -eq 1 ]; then
        echo "some directories are missed"
        exit -1
    fi
}

while getopts :d:v:xy opt
do
  case ${opt} in
    d) git_root_directory=${OPTARG};;
    v) version=${OPTARG};;
    x) debug=1;;
    '?')  echo "${0} : option ${OPTARG} is not valid" >&2
          exit -1
    ;;
  esac
done

debug="${debug:-"0"}"

if [ -z $version ]; then
    usage
fi


if [ $debug -eq 1 ]; then
    git="echo git"
else
    git="git"
fi

if [ -z $git_root_directory ]; then
    git_root_directory="$HOME/xivo_src"
else
    git_root_directory="$git_root_directory"
fi

URL_REPOS_LIST="http://mirror.wazo.community/repos/python-tag"
GIT_DIRECTORIES=$(wget -qO - "$URL_REPOS_LIST")
if [ $? -ne 0 ]; then
    echo "Unable to fetch repositories list from $URL_REPOS_LIST."
    exit 1
fi

directories=$(sed "s|^|$git_root_directory/|g" <<< "$GIT_DIRECTORIES")

check_if_directories_exist
update_repository $directories
create_tag $directories
